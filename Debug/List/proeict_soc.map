################################################################################
#                                                                              #
#      IAR Universal Linker V5.2.5.17                                          #
#                                                                              #
#           Link time     =  18/Jan/2024  20:39:56                             #
#           Target CPU    =  A90                                               #
#           List file     =  D:\1307A\soc-p\proiect\Debug\List\proeict_soc.map #
#           Output file 1 =  D:\1307A\soc-p\proiect\Debug\Exe\proeict_soc.d90  #
#                            Format: debug                                     #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  D:\1307A\soc-p\proiect\Debug\Obj\functii.r90      #
#                            D:\1307A\soc-p\proiect\Debug\Obj\main.r90 -o      #
#                            D:\1307A\soc-p\proiect\Debug\Exe\proeict_soc.d90  #
#                            -l                                                #
#                            D:\1307A\soc-p\proiect\Debug\List\proeict_soc.map #
#                            -xmsnio                                           #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 6.0\avr\LIB\"                             #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\avr\src\template\cfgm16.xcl"            #
#                            (-D_..X_INTVEC_SIZE=54 -D_..X_FLASH_NEND=3FFF     #
#                            -D_..X_FLASH_END=3FFF -D_..X_SRAM_BASE=60         #
#                            -D_..X_SRAM_TBASE=_..X_SRAM_BASE                  #
#                            -D_..X_SRAM_TSIZE=(100-_..X_SRAM_BASE)            #
#                            -D_..X_SRAM_END=45F                               #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_END                #
#                            -D_..X_EXT_SRAM_SIZE=0                            #
#                            -D_..X_EXT_ROM_BASE=_..X_SRAM_END                 #
#                            -D_..X_EXT_ROM_SIZE=0                             #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_END                  #
#                            -D_..X_EXT_NV_SIZE=0 -D_..X_EEPROM_END=1FF        #
#                            -D_..X_EEPROM_START=0) -D_..X_HEAP_SIZE=10        #
#                            -D_..X_TINY_HEAP_SIZE=0 -D_..X_NEAR_HEAP_SIZE=0   #
#                            -D_..X_FAR_HEAP_SIZE=0 -D_..X_HUGE_HEAP_SIZE=0    #
#                            -D_..X_CSTACK_SIZE=20 -D_..X_RSTACK_SIZE=20       #
#                            -D_..X_FLASH_CODE_END=_..X_FLASH_END -f           #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\avr\src\template\cfg3soim.xcl"          #
#                            (-ca90 -w29                                       #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)             #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -P(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10 #
#                            000                                               #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_.. #
#                            X_SRAM_TSIZE                                      #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_CSTACK_BASE- #
#                            _..X_CSTACK_END                                   #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE- #
#                            _..X_RSTACK_END                                   #
#                            -Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END)                                      #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                            -D_..X_CSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_CSTACK_END=_..X_SRAM_END                   #
#                            -D_..X_RSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_RSTACK_END=_..X_SRAM_END -rt -s            #
#                            __program_start                                   #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\avr\LIB\CLIB\cl3s-ec_mul-sf.r90"        #
#                            -e_large_write=_formatted_write                   #
#                            -e_large_read=_formatted_read                     #
#                                                                              #
#                           Copyright (C) 1987-2011 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __64bit_doubles = disabled
  __SystemLibrary = CLib
  __cpu           = 3
  __cpu_name      = ATmega16
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 2
  __rt_version    = 3
  __tiny_avr      = false

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_RSTACK_END         0000045F 
           _..X_RSTACK_BASE        00000060 
           _..X_CSTACK_END         0000045F 
           _..X_CSTACK_BASE        00000060 
           _..X_FLASH_BASE         00000054 
           _..X_FLASH_CODE_END     00003FFF 
           _..X_RSTACK_SIZE        00000020 
           _..X_CSTACK_SIZE        00000020 
           _..X_HUGE_HEAP_SIZE     00000000 
           _..X_FAR_HEAP_SIZE      00000000 
           _..X_NEAR_HEAP_SIZE     00000000 
           _..X_TINY_HEAP_SIZE     00000000 
           _..X_HEAP_SIZE          00000010 
           _..X_EEPROM_START       00000000 
           _..X_EEPROM_END         000001FF 
           _..X_EXT_NV_SIZE        00000000 
           _..X_EXT_NV_BASE        0000045F 
           _..X_EXT_ROM_SIZE       00000000 
           _..X_EXT_ROM_BASE       0000045F 
           _..X_EXT_SRAM_SIZE      00000000 
           _..X_EXT_SRAM_BASE      0000045F 
           _..X_SRAM_END           0000045F 
           _..X_SRAM_TSIZE         000000A0 
           _..X_SRAM_TBASE         00000060 
           _..X_SRAM_BASE          00000060 
           _..X_FLASH_END          00003FFF 
           _..X_FLASH_NEND         00003FFF 
           _..X_INTVEC_SIZE        00000054 
    *************************************************************************

  FILE NAME : D:\1307A\soc-p\proiect\Debug\Obj\functii.r90
  PROGRAM MODULE, NAME : ext_intrerupere

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __ATmega128__           00000000 
  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000015 (0x16 bytes), align: 1
  Segment part 0. ROOT.

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : c_intrerupere

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000054 - 0000006F (0x1c bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           c_intrerupere           00000054        __ATmega128__ (ext_intrerupere)
           LOCAL                   ADDRESS         
           =====                   =======         
           final                   00000064 

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : beculet

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000070 - 00000081 (0x12 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           beculet                 00000070        main (main)
           LOCAL                   ADDRESS         
           =====                   =======         
           stinge_bec              0000007C 
           aprinde_bec             00000074 
           final                   00000080 

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : initializare

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000082 - 0000009F (0x1e bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           initializare            00000082        main (main)

    *************************************************************************

  FILE NAME : D:\1307A\soc-p\proiect\Debug\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 0000004E - 0000004E (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1B               0000004E 
           LOCAL                   ADDRESS         
           =====                   =======         
           TCCR1B                  0000004E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004C - 0000004D (0x2 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT1                0000004C 
           LOCAL                   ADDRESS         
           =====                   =======         
           TCNT1                   0000004C 
           TCNT1H                  0000004D 
           TCNT1L                  0000004C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000037 - 00000037 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRB                 00000037 
           LOCAL                   ADDRESS         
           =====                   =======         
           DDRB                    00000037 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000031 - 00000031 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRD                 00000031 
           LOCAL                   ADDRESS         
           =====                   =======         
           DDRD                    00000031 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           intrare_automat         000000A0        c_intrerupere (c_intrerupere)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000A1 - 000000A2 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iesire_automat          000000A1 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000A3 - 000000A3 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stare_automat           000000A3 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000A0 - 00000103 (0x64 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000000A0        ?cstartup_call_main (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001C, align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001D, align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 0000001D 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001E, align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                0000001E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                0000001F 
    -------------------------------------------------------------------------
CSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000182 - 00000187 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   iesire_automat
                                                   intrare_automat
                                                   stare_automat
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   00000182 

    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 6.0\avr\LIB\CLIB\cl3s-ec_mul-sf.r90
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000104 - 00000109 (0x6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  00000106 
           ?C_EXIT                 00000106 
           ?C_FUNCALL              00000104 
           _exit                   00000104        ?cstartup_call_main (?C_STARTUP)
           exit                    00000104        ?cstartup_call_main (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (0x4 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         00000000        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000010A, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              0000010A        Segment part 0 (?RESET)
           __RESTART               0000010A 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram_new_way
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000010A - 00000115 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?zero_reg_initialization
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000116 - 00000119 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    00000116 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000011A - 00000121 (0x8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      0000011A        ?<Segment init: NEAR_Z> (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000122 - 0000012D (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     00000122 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000012E - 00000131 (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000012E        ?call_low_level_init (?C_STARTUP)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000132 - 00000139 (0x8 bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                00000132 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000013A - 00000141 (0x8 bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              0000013A 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000142 - 0000014D (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   __flashcpy
                                                   __memclr
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000014E - 00000181 (0x34 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          0000014E        ?need_segment_init (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 7. NOT NEEDED.

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000015 (0x16 bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 00000016 - 00000053 (0x3e bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE      DATA
------               ----      ----
                    (Rel)  (Rel)  (Abs)
?C_STARTUP             36
?FILLER_BYTES          62
  + common             22
?RESET
  + common              4
?__exit                 6
?low_level_init         4
?segment_init          80
beculet                18
c_intrerupere          28
ext_intrerupere
  + common             22
initializare           30
main                  106      4      5
N/A (command line)            64
N/A (alignment)
----------            ---     --      -
Total:                370     68      5
  + common             22


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Function tree
                             RSTACK
    | Stack used (prev) :  00000000
  01  main
      | Stack used (prev) :  00000000
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000002


  ->Sub-tree of type: Function tree
                             RSTACK
    | Stack used (prev) :  00000002
  01  __low_level_init
      | Stack used (prev) :  00000002
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000004


  ->Sub-tree of type: Function tree
                             RSTACK
    | Stack used (prev) :  00000004
  02    __flashcpy
        | Stack used (prev) :  00000004
        | + function block  :  00000002
  02    __memclr
        | Stack used (prev) :  00000004
        | + function block  :  00000002
  01  __segment_init
      | Stack used (prev) :  00000006
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000008




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000015          16   com    1
?FILL1               CODE          00000016 - 00000053          3E   rel    0
CODE                 CODE          00000054 - 00000181         12E   rel    1
INITTAB              CODE          00000182 - 00000187           6   rel    0
ABSOLUTE             DATA               0000001C                     rel    0
                     DATA               0000001D                   
                     DATA               0000001E                   
                     DATA               0000001F                   
                     DATA          00000031 - 00000031           1 
                     DATA          00000037 - 00000037           1 
                     DATA          0000004C - 0000004E           3 
CSTACK               DATA          00000060 - 0000007F          20   dse    0
RSTACK               DATA          00000080 - 0000009F          20   dse    0
NEAR_I               DATA               000000A0                     dse    0
NEAR_Z               DATA          000000A0 - 000000A3           4   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 330 bytes of CODE memory (+            62 range fill )
  68 bytes of DATA memory (+ 5 absolute )

Errors: none
Warnings: none

